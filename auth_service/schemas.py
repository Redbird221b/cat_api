from pydantic import BaseModel, Field
from typing import List, Optional
from datetime import datetime


# üìå –°—Ö–µ–º—ã –¥–ª—è –¥–Ω–µ–π –º–∞—Ä—à—Ä—É—Ç–∞
class ScheduleBase(BaseModel):
    day_number: int = Field(..., ge=1, description="–ù–æ–º–µ—Ä –¥–Ω—è –º–∞—Ä—à—Ä—É—Ç–∞ (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 1)")
    activities: Optional[str] = Field(None, description="–û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –Ω–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å")
    image: Optional[str] = Field(None, description="–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")


class ScheduleCreate(ScheduleBase):
    pass


class ScheduleResponse(ScheduleBase):
    id: int


# üìå –°—Ö–µ–º—ã –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–æ–≤
class RouteBase(BaseModel):
    cities: List[str] = Field(..., description="–°–ø–∏—Å–æ–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ –∏–ª–∏ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π")
    description: Optional[str] = Field(None, description="–û–ø–∏—Å–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞")


class RouteCreate(RouteBase):
    schedules: List[ScheduleCreate]


class RouteResponse(RouteBase):
    id: int
    schedules: List[ScheduleResponse]


# üìå –°—Ö–µ–º—ã –¥–ª—è —Ç—É—Ä–æ–≤
class TourBase(BaseModel):
    name: str = Field(..., description="–ù–∞–∑–≤–∞–Ω–∏–µ —Ç—É—Ä–∞")
    countries: List[str] = Field(..., description="–°—Ç—Ä–∞–Ω—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ç—É—Ä")
    duration: int = Field(..., ge=1, description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –∏ –Ω–æ—á–µ–π —Ç—É—Ä–∞")
    dates: Optional[List[str]] = Field(None, description="–ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞—Ç—ã –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è")
    description: Optional[str] = Field(None, description="–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç—É—Ä–∞")
    meals: Optional[str] = Field(None, description="–í–∫–ª—é—á–µ–Ω–Ω—ã–µ –ø—Ä–∏–µ–º—ã –ø–∏—â–∏")
    price: float = Field(..., ge=0, description="–°—Ç–æ–∏–º–æ—Å—Ç—å —Ç—É—Ä–∞")
    extra_costs: Optional[str] = Field(None, description="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã")
    accommodation: Optional[str] = Field(None, description="–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è")


class TourCreate(TourBase):
    routes: List[RouteCreate]


class TourResponse(TourBase):
    id: int
    created_at: datetime
    routes: List[RouteResponse]

    class Config:
        from_attributes = True
